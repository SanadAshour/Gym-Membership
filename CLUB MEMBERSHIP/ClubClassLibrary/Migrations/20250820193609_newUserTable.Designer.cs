// <auto-generated />
using System;
using ClubClassLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClubClassLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250820193609_newUserTable")]
    partial class newUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClubClassLibrary.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "SARAJ",
                            BirthDate = new DateTime(2002, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JoinDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sanad",
                            PhoneNumber = "1234"
                        },
                        new
                        {
                            Id = 2,
                            Address = "SARAJ",
                            BirthDate = new DateTime(2004, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JoinDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seraj",
                            PhoneNumber = "1234"
                        });
                });

            modelBuilder.Entity("ClubClassLibrary.Models.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("MembershipTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MembershipTypeId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("ClubClassLibrary.Models.MembershipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MembershipTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 50m,
                            Description = "A MONTHLY DESCRIPTION",
                            Name = "Monthly"
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 200m,
                            Description = "AN ANNUAL DESCRIPTION",
                            Name = "Annual"
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 500m,
                            Description = "A PREMIUM DESCRIPTION",
                            Name = "Premium"
                        });
                });

            modelBuilder.Entity("ClubClassLibrary.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberShipId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MemberShipId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ClubClassLibrary.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MembersPermission")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReportsPermission")
                        .HasColumnType("bit");

                    b.Property<bool>("UsersPermission")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin1@yahoo.com",
                            MembersPermission = false,
                            Name = "admin1",
                            Password = "123",
                            ReportsPermission = false,
                            UsersPermission = true
                        },
                        new
                        {
                            Id = 2,
                            Email = "admin2@yahoo.com",
                            MembersPermission = true,
                            Name = "admin2",
                            Password = "456",
                            ReportsPermission = false,
                            UsersPermission = false
                        },
                        new
                        {
                            Id = 3,
                            Email = "admin3@yahoo.com",
                            MembersPermission = false,
                            Name = "admin3",
                            Password = "789",
                            ReportsPermission = true,
                            UsersPermission = false
                        });
                });

            modelBuilder.Entity("ClubClassLibrary.Models.Membership", b =>
                {
                    b.HasOne("ClubClassLibrary.Models.Member", "Member")
                        .WithMany("Memberships")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ClubClassLibrary.Models.MembershipType", "MembershipType")
                        .WithMany("Memberships")
                        .HasForeignKey("MembershipTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("MembershipType");
                });

            modelBuilder.Entity("ClubClassLibrary.Models.Payment", b =>
                {
                    b.HasOne("ClubClassLibrary.Models.Member", "Member")
                        .WithMany("Payments")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ClubClassLibrary.Models.Membership", "Membership")
                        .WithMany("Payments")
                        .HasForeignKey("MemberShipId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Member");

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("ClubClassLibrary.Models.Member", b =>
                {
                    b.Navigation("Memberships");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ClubClassLibrary.Models.Membership", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ClubClassLibrary.Models.MembershipType", b =>
                {
                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}
